# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json

# CodeRabbit Configuration for Self-Correcting Executor
# AI-powered code review and analysis for quantum computing, MCP, and A2A systems

language: "en-US"
tone_instructions: "Focus on security, performance, and architectural best practices for quantum computing, MCP integration, and agent-to-agent communication systems."
early_access: true
enable_free_tier: true

reviews:
  profile: "assertive"  # More thorough reviews for complex quantum/AI systems
  request_changes_workflow: true  # Ensure quality gates
  high_level_summary: true
  high_level_summary_placeholder: "@coderabbitai summary"
  high_level_summary_in_walkthrough: true
  auto_title_placeholder: "@coderabbitai"
  auto_title_instructions: "Generate concise titles that highlight quantum computing, MCP, security, or A2A communication changes"
  review_status: true
  commit_status: true
  fail_commit_status: true  # Fail on critical issues
  collapse_walkthrough: false
  changed_files_summary: true
  sequence_diagrams: true  # Useful for A2A communication flows
  assess_linked_issues: true
  related_issues: true
  related_prs: true
  suggested_labels: true
  auto_apply_labels: true  # Auto-apply relevant labels
  suggested_reviewers: true
  auto_assign_reviewers: false
  poem: true  # Keep it fun!
  
  labeling_instructions:
    - label: "quantum"
      instructions: "Apply to changes related to D-Wave integration, quantum computing, or QUBO optimization"
    - label: "mcp"
      instructions: "Apply to Model Context Protocol related changes, connectors, or context management"
    - label: "a2a"
      instructions: "Apply to Agent-to-Agent communication, message routing, or multi-agent systems"
    - label: "security"
      instructions: "Apply to authentication, authorization, JWT, encryption, or security middleware changes"
    - label: "performance"
      instructions: "Apply to performance optimizations, transport strategies, or SLA improvements"
    - label: "breaking-change"
      instructions: "Apply to changes that break API compatibility or require migration"
    - label: "documentation"
      instructions: "Apply to README updates, API docs, or code documentation changes"

  path_instructions:
    - path: "agents/**"
      instructions: "Focus on agent communication patterns, message handling, and A2A protocol compliance. Check for proper error handling in agent interactions."
    - path: "connectors/**"
      instructions: "Emphasize MCP compliance, connection stability, and proper resource cleanup. Validate quantum connector implementations."
    - path: "middleware/security_middleware.py"
      instructions: "Scrutinize authentication flows, JWT handling, password security, and authorization logic. Check for security vulnerabilities."
    - path: "protocols/**"
      instructions: "Review protocol implementations for correctness, error handling, and performance. Validate quantum protocol accuracy."
    - path: "scripts/**"
      instructions: "Check production readiness, error handling, and security of deployment scripts."
    - path: "tests/**"
      instructions: "Ensure comprehensive test coverage, especially for quantum operations, MCP integration, and security features."
    - path: "frontend/**"
      instructions: "Focus on React best practices, TypeScript safety, and UI/UX consistency."
    - path: ".github/workflows/**"
      instructions: "Validate CI/CD pipeline security, efficiency, and proper secret handling."

  abort_on_close: false  # Allow reviews on closed PRs for learning
  disable_cache: false
  
  auto_review:
    enabled: true
    auto_incremental_review: true
    ignore_title_keywords: ["wip", "draft", "temp"]
    labels: []
    drafts: false
    base_branches: ["main", "master", "develop"]

  finishing_touches:
    docstrings:
      enabled: true
    unit_tests:
      enabled: true

  tools:
    # Python tools
    ruff:
      enabled: true
    pylint:
      enabled: true
    
    # Security tools
    gitleaks:
      enabled: true
    checkov:
      enabled: true
    semgrep:
      enabled: true
      config_file: ""
    
    # Web/Frontend tools
    eslint:
      enabled: true
    biome:
      enabled: true
    
    # Infrastructure tools
    shellcheck:
      enabled: true
    hadolint:
      enabled: true
    yamllint:
      enabled: true
    actionlint:
      enabled: true
    checkmake:
      enabled: true
    
    # Documentation tools
    markdownlint:
      enabled: true
    
    # General tools
    github-checks:
      enabled: true
      timeout_ms: 120000  # Extended timeout for quantum computations
    languagetool:
      enabled: true
      enabled_rules: []
      disabled_rules: []
      enabled_categories: []
      disabled_categories: []
      enabled_only: false
      level: default
    
    # Environment tools
    dotenvLint:
      enabled: true
    
    # Disable tools not relevant to this project
    swiftlint:
      enabled: false
    phpstan:
      enabled: false
    golangci-lint:
      enabled: false
    detekt:
      enabled: false
    rubocop:
      enabled: false
    buf:
      enabled: false
    regal:
      enabled: false
    pmd:
      enabled: false
    cppcheck:
      enabled: false
    circleci:
      enabled: false
    clippy:
      enabled: false
    sqlfluff:
      enabled: false
    prismaLint:
      enabled: false
    oxc:
      enabled: false
    shopifyThemeCheck:
      enabled: false
    luacheck:
      enabled: false
    brakeman:
      enabled: false
    htmlhint:
      enabled: false

chat:
  auto_reply: true
  integrations:
    jira:
      usage: disabled
    linear:
      usage: disabled

knowledge_base:
  opt_out: false
  web_search:
    enabled: true
  code_guidelines:
    enabled: true
    filePatterns: []
  learnings:
    scope: auto
  issues:
    scope: auto
  jira:
    usage: disabled
    project_keys: []
  linear:
    usage: disabled
    team_keys: []
  pull_requests:
    scope: auto

code_generation:
  docstrings:
    language: "en-US"
    path_instructions:
      - path: "agents/**"
        instructions: "Generate comprehensive docstrings explaining agent capabilities, message handling, and A2A communication patterns."
      - path: "connectors/**"
        instructions: "Document MCP compliance, connection requirements, and usage examples for each connector."
      - path: "protocols/**"
        instructions: "Explain protocol specifications, quantum operations, and integration requirements."
      - path: "middleware/**"
        instructions: "Document security features, authentication flows, and middleware configuration options."
  unit_tests:
    path_instructions:
      - path: "agents/**"
        instructions: "Generate tests for agent communication, message routing, and error handling scenarios."
      - path: "connectors/**"
        instructions: "Create tests for connection establishment, data transfer, and disconnection procedures."
      - path: "protocols/**"
        instructions: "Test protocol compliance, quantum operations, and edge cases."
      - path: "middleware/**"
        instructions: "Test authentication, authorization, and security features thoroughly."