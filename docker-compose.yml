services:
  mcp_db:
    image: postgres:15
    container_name: mcp_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  mcp_redis:
    image: redis:7
    container_name: mcp_redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  mcp_core:
    build: .
    container_name: mcp_core
    env_file:
      - .env
    ports:
      - "8080:8080"
    volumes:
      - .:/app
      - /var/run/docker.sock:/var/run/docker.sock
      - ${HOME}/Desktop:/data/desktop:ro
      - ${HOME}/Documents:/data/documents:ro
      - ${HOME}/GPTDATA:/data/gptdata:ro
    depends_on:
      mcp_db:
        condition: service_healthy
      mcp_redis:
        condition: service_healthy
    restart: unless-stopped

volumes:
  pgdata:
  redisdata: 